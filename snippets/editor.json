{
  "edit": {
    "prefix": "edit",
    "body": [
      "import { Data } from './types';\nexport default {\n  '@init': ({ style, data }) => {},\n  '@resize': {\n    options: []\n  },\n  ':root'({ data }: EditorResult<Data>, ...cate) {\n    cate[0].title = '配置';\n    cate[0].items = [\n      {\n        title: '名称',\n        type: 'text',\n        value: {\n          get({ data }: EditorResult<Data>) {\n            return data.name;\n          },\n          set({ data }: EditorResult<Data>, name: string) {\n            data.name = name;\n          }\n        }\n      }\n    ];\n  }\n};\n"
    ],
    "description": "Code snippet for 'editors.tsx'"
  },
  "item": {
    "prefix": "item",
    "body": [
      "{\n  title: '',\n  type: '',\n  value: {\n    get({ data }: EditorResult<Data>) {\n      return data;\n    },\n    set({ data }: EditorResult<Data>, val: string) {\n      \n    }\n  }\n}"
    ],
    "description": "Code snippet for 'editor item'"
  },
  "ifVisible": {
    "prefix": "ifVisible",
    "body": ["ifVisible({ data }: EditorResult<Data>) {\n  return data;\n},"]
  },
  "@init": {
    "prefix": "@init",
    "body": ["'@init': ({ style, data }) => {},"]
  },
  "@resize": {
    "prefix": "@resize",
    "body": ["'@resize': {\n    options: []\n  },"]
  },
  "@inputConnected": {
    "prefix": "@inputConnected",
    "body": [
      "'@inputConnected'({ data, input, output }, fromPin, toPin) {\n\t/**\n\t* fromPin: 上一个连接点信息 { id, schema, title }\n\t* toPin: 当前连接点信息 { id, schema, title }\n\t*/\n},"
    ]
  },
  "@inputUpdated": {
    "prefix": "@inputUpdated",
    "body": [
      "'@inputUpdated'({ data, input, output }, { id, schema }) {\n\t/**\n\t* id: 当前连接点id\n\t* schema: 上一个连接点输出schema\n\t*/\n},"
    ]
  },
  "@inputDisConnected": {
    "prefix": "@inputDisConnected",
    "body": [
      "'@inputDisConnected': ({ data, input, output }, fromPin, toPin) => {\n\t/**\n\t* fromPin: 上一个连接点信息 { id, schema, title }\n\t* toPin: 当前连接点信息 { id, schema, title }\n\t*/\n},"
    ]
  }
}
