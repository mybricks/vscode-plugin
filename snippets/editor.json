{
  "edit": {
    "prefix": "edit",
    "body": [
      "import { Data } from './types';\nexport default {\n  '@init': ({ style, data }) => {},\n  '@resize': {\n    options: []\n  },\n  ':root'({ data }: EditorResult<Data>, ...cate) {\n    cate[0].title = '配置';\n    cate[0].items = [\n      {\n        title: '名称',\n        type: 'text',\n        value: {\n          get({ data }: EditorResult<Data>) {\n            return data.name;\n          },\n          set({ data }: EditorResult<Data>, name: string) {\n            data.name = name;\n          }\n        }\n      }\n    ];\n  }\n};\n"
    ],
    "description": "Code snippet for 'editors.tsx'"
  },
  "item": {
    "prefix": "item",
    "body": [
      "{\n  title: '',\n  type: '',\n  value: {\n    get({ data }: EditorResult<Data>) {\n      return data;\n    },\n    set({ data }: EditorResult<Data>, val: string) {\n      \n    }\n  }\n}"
    ],
    "description": "Code snippet for 'editor item'"
  },
  "select": {
    "prefix": "'select'",
    "body": ["'select"]
  },
  "button": {
    "prefix": "button'",
    "body": ["'button"]
  },
  "switch": {
    "prefix": "'switch'",
    "body": ["'switch"]
  },
  "text": {
    "prefix": "'text'",
    "body": ["'text"]
  },
  "radio": {
    "prefix": "'radio'",
    "body": ["'radio"]
  },
  "textArea": {
    "prefix": "'textArea'",
    "body": ["'textArea"]
  },
  "inputNumber": {
    "prefix": "'inputNumber'",
    "body": ["'inputNumber"]
  },
  "style": {
    "prefix": "'style'",
    "body": ["'style"]
  },
  "map": {
    "prefix": "'map'",
    "body": ["'map"]
  },
  "icon": {
    "prefix": "'icon'",
    "body": ["'icon"]
  },
  "code": {
    "prefix": "'code'",
    "body": ["'code"]
  },
  "array": {
    "prefix": "'array'",
    "body": ["'array"]
  },
  "list": {
    "prefix": "'list'",
    "body": ["'list"]
  },
  "richText": {
    "prefix": "'richText'",
    "body": ["'richText"]
  },
  "layout": {
    "prefix": "'layout'",
    "body": ["'layout"]
  },
  "slider": {
    "prefix": "'slider'",
    "body": ["'slider"]
  },
  "datePicker": {
    "prefix": "'datePicker'",
    "body": ["'datePicker"]
  },
  "treeSelect": {
    "prefix": "'treeSelect'",
    "body": ["'treeSelect"]
  },
  "dateRangePicker": {
    "prefix": "'dateRangePicker'",
    "body": ["'dateRangePicker"]
  },
  "iconRadio": {
    "prefix": "'iconRadio'",
    "body": ["'iconRadio"]
  },
  "fontFace": {
    "prefix": "'fontFace'",
    "body": ["'fontFace"]
  },
  "excel": {
    "prefix": "'excel'",
    "body": ["'excel"]
  },
  "service": {
    "prefix": "'service'",
    "body": ["'service"]
  },
  "definedSelector": {
    "prefix": "'definedSelector'",
    "body": ["'definedSelector"]
  },
  "editorBackground": {
    "prefix": "'editorBackground'",
    "body": ["'editorBackground"]
  },
  "reserve": {
    "prefix": "'reserve'",
    "body": ["'reserve"]
  },
  "share": {
    "prefix": "'share'",
    "body": ["'share"]
  },
  "imageSelector": {
    "prefix": "'imageSelector'",
    "body": ["'imageSelector"]
  },
  "insideService": {
    "prefix": "'insideService'",
    "body": ["'insideService"]
  },
  "character": {
    "prefix": "'character'",
    "body": ["'character"]
  },
  "dragList": {
    "prefix": "'dragList'",
    "body": ["'dragList"]
  },
  "colorPicker": {
    "prefix": "'colorPicker'",
    "body": ["'colorPicker"]
  },
  "expression": {
    "prefix": "'expression'",
    "body": ["'expression"]
  },
  "_Event": {
    "prefix": "'_Event'",
    "body": ["'_Event"]
  },
  "@init": {
    "prefix": "@init",
    "body": ["'@init': ({ style, data }) => {},"]
  },
  "@resize": {
    "prefix": "@resize",
    "body": ["'@resize': {\n    options: []\n  },"]
  },
  "@inputConnected": {
    "prefix": "@inputConnected",
    "body": [
      "'@inputConnected'({ data, input, output }, fromPin, toPin) {\n\t/**\n\t* fromPin: 上一个连接点信息 { id, schema, title }\n\t* toPin: 当前连接点信息 { id, schema, title }\n\t*/\n},"
    ]
  },
  "@inputUpdated": {
    "prefix": "@inputUpdated",
    "body": [
      "'@inputUpdated'({ data, input, output }, { id, schema }) {\n\t/**\n\t* id: 当前连接点id\n\t* schema: 上一个连接点输出schema\n\t*/\n},"
    ]
  },
  "@inputDisConnected": {
    "prefix": "@inputDisConnected",
    "body": [
      "'@inputDisConnected': ({ data, input, output }, fromPin, toPin) => {\n\t/**\n\t* fromPin: 上一个连接点信息 { id, schema, title }\n\t* toPin: 当前连接点信息 { id, schema, title }\n\t*/\n},"
    ]
  },
  "ifVisible": {
    "prefix": "ifVisible",
    "body": ["ifVisible({ data }: EditorResult<Data>) {\n  return data;\n},"]
  }
}
